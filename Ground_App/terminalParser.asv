function terminalParser(src,event,ref,input)
    disp(input)
    % Split the input string by whitespace
    parts = strsplit(input, ' ');

    % Check if the input contains a command and a value
    if numel(parts) < 2
        newText = 'Invalid command parts';
        ref.Value = newText;
        disp('Invalid command');
        return;
    end

    % Extract the command and value
    command = parts{1};
    value = str2double(parts{3});

    % Check the command and perform the corresponding action
    switch command
        case 'set'
            % Check the specific sub-command
            subCommand = parts{2};
            switch subCommand
                case 'wing-FL'
                    newText = ['Setting wing-FL to ',num2str(value)];
                    ref.Value = newText;
                    disp(['Setting wing-FL to ' num2str(value)]);
                    % Perform action for wing-FL
                case 'wing-FR'
                    newText = ['Setting wing-FR to ',num2str(value)];
                    ref.Value = newText;
                    disp(['Setting wing-FR to ' num2str(value)]);
                    % Perform action for wing-FR
                case 'wing-RL'
                    newText = ['Setting wing-RL to ',num2str(value)];
                    ref.Value = newText;
                    disp(['Setting wing-RL to ' num2str(value)]);
                    % Perform action for wing-RL
                case 'wing-RR'
                    newText = ['Setting wing-RR to ',num2str(value)];
                    ref.Value = newText;
                    disp(['Setting wing-RR to ' num2str(value)]);
                    % Perform action for wing-RR
                case 'throttle'
                    newText = ['Setting throttle to ',num2str(value)];
                    ref.Value = newText;
                    disp(['Setting throttle to ' num2str(value)]);
                    % Perform action for throttle
                case 'set-targetLong'
                    newText = ['Setting target Longitud to ',num2str(value)];
                    ref.Value = newText;
                    disp(['Setting targetLong to ' num2str(value)]);
                    % Perform action for set-targetLong
                case 'set-targetLat'
                    
                    disp(['Setting targetLat to ' num2str(value)]);
                    % Perform action for set-targetLat
                case 'set-vehicleState'
                    disp(['Setting vehicleState to ' num2str(value)]);
                    % Perform action for set-vehicleState
                otherwise
                    newText = 'Invalid command';
                    ref.Value = newText;
                    disp('Invalid command');
            end
        otherwise
            newText = 'Invalid command';
            ref.Value = newText;
            disp('Invalid command');
    end
end
